{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { of, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ParametersService = /*#__PURE__*/(() => {\n  class ParametersService {\n    constructor(http) {\n      this.http = http;\n      this.dataChanges = new Subject();\n      this.url = `${environment.host}/parameters`;\n    }\n    getParameters() {\n      return this.http.get(this.url).pipe(map(res => res.data));\n    }\n    getParameter(id) {\n      return this.http.get(`${this.url}/${id}`).pipe(map(res => res.data));\n    }\n    insertParamater(parameter) {\n      return this.http.post(`${this.url}`, parameter);\n    }\n    udpateParameter(id, parameter) {\n      return this.http.put(`${this.url}/${id}`, parameter);\n    }\n    deleteParameter(id) {\n      return this.http.delete(`${this.url}/${id}`);\n    }\n    findByKey(key, id) {\n      return this.http.get(`${this.url}/findByKey?key=${key}&id=${id || ''}`).pipe(catchError(err => of(undefined)), map(res => res.data));\n    }\n  }\n  ParametersService.ɵfac = function ParametersService_Factory(t) {\n    return new (t || ParametersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ParametersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ParametersService,\n    factory: ParametersService.ɵfac,\n    providedIn: 'root'\n  });\n  return ParametersService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}