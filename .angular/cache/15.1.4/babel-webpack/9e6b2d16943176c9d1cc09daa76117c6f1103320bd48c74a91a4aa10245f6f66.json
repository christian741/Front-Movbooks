{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { of, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PqrsService = /*#__PURE__*/(() => {\n  class PqrsService {\n    constructor(http) {\n      this.http = http;\n      this.dataChanges = new Subject();\n      this.url = `${environment.host}/pqrs`;\n    }\n    getPqrs() {\n      return this.http.get(`${this.url}`).pipe(catchError(err => of([])),\n      // 401 UnAuthorize\n      map(res => res.data));\n    }\n    getPqr(id) {\n      return this.http.get(`${this.url}/${id}`).pipe(catchError(err => of(undefined)),\n      // 401 UnAuthorize\n      map(res => res.data));\n    }\n    insertPqr(pqr) {\n      return this.http.post(`${this.url}`, pqr);\n    }\n    updatePqr(id, pqr) {\n      return this.http.put(`${this.url}/${id}`, pqr);\n    }\n    deletePqr(id) {\n      return this.http.delete(`${this.url}/${id}`);\n    }\n    getPqrsByUser(userId) {\n      return this.http.get(`${this.url}?userId=${userId}`).pipe(catchError(err => of([])), map(res => res.data));\n    }\n  }\n  PqrsService.ɵfac = function PqrsService_Factory(t) {\n    return new (t || PqrsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PqrsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PqrsService,\n    factory: PqrsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PqrsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}