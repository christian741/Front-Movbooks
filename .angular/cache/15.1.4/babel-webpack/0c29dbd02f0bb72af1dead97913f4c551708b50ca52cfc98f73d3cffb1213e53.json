{"ast":null,"code":"import { environment } from '../../environments/environment.prod';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(http) {\n      this.http = http;\n      this.url = `${environment.host}/users`;\n    }\n    getUsers() {\n      return this.http.get(`${this.url}`).pipe(map(res => {\n        const users = res.data;\n        return users.filter(x => x.roleId !== 2);\n      }), catchError(err => of([])) // 401 Unauthorize\n      );\n    }\n\n    getUser(id) {\n      return this.http.get(`${this.url}/${id}`).pipe(catchError(err => of(undefined)),\n      // Not Found\n      map(res => res.data));\n    }\n    update(user) {\n      return this.http.put(`${this.url}/${user.id}`, user);\n    }\n    findByEmail(email) {\n      return this.http.get(`${this.url}/findByEmail?email=${email}`).pipe(catchError(err => of(undefined)),\n      // 404 Not found - No existe un usuario con el email\n      map(res => res === null || res === void 0 ? void 0 : res.data));\n    }\n    findByNickname(nickname) {\n      return this.http.get(`${this.url}/findByNickname?nickname=${nickname}`).pipe(catchError(err => of(undefined)),\n      // 404 Not found - No existe un usuario con el nickname\n      map(res => res === null || res === void 0 ? void 0 : res.data));\n    }\n  }\n  UsersService.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsersService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}