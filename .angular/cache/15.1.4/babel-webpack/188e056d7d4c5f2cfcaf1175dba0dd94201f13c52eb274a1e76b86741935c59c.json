{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { of } from 'rxjs/internal/observable/of';\nimport { environment } from '../../environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GenderService = /*#__PURE__*/(() => {\n  class GenderService {\n    constructor(http) {\n      this.http = http;\n      this.url = `${environment.host}/gender`;\n      this.dataChanges = new Subject();\n    }\n    getGenders(filters) {\n      let params = new HttpParams();\n      params = params.append('pageSize', filters.pageSize.toString());\n      params = params.append('pageNumber', filters.pageNumber.toString());\n      params = params.append('title', filters.Name);\n      return this.http.get(`${this.url}`, {\n        params\n      });\n    }\n    getGender(id) {\n      return this.http.get(`${this.url}/${id}`).pipe(catchError(err => of(undefined)),\n      // 401 UnAuthorize\n      map(res => res === null || res === void 0 ? void 0 : res.data));\n    }\n    insertGender(gender) {\n      //console.log([gender]);\n      return this.http.post(`${this.url}`, gender);\n    }\n    updateGender(id, gender) {\n      return this.http.put(`${this.url}/${id}`, gender);\n    }\n    deleteGender(id) {\n      return this.http.delete(`${this.url}/${id}`);\n    }\n  }\n  GenderService.ɵfac = function GenderService_Factory(t) {\n    return new (t || GenderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  GenderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GenderService,\n    factory: GenderService.ɵfac,\n    providedIn: 'root'\n  });\n  return GenderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}