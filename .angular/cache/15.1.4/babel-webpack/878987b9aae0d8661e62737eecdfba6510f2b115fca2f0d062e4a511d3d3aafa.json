{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/parameters.service\";\nimport * as i2 from \"../../../services/toast.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../shared/header/header.component\";\nfunction SettingsPage_ion_list_13_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\")(2, \"span\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-button\", 11);\n    i0.ɵɵlistener(\"click\", function SettingsPage_ion_list_13_ion_item_1_Template_ion_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const param_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.edit(param_r2));\n    });\n    i0.ɵɵelement(7, \"ion-icon\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-button\", 13);\n    i0.ɵɵlistener(\"click\", function SettingsPage_ion_list_13_ion_item_1_Template_ion_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const param_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.delete(param_r2));\n    });\n    i0.ɵɵelement(9, \"ion-icon\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const param_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(param_r2.key);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(param_r2.value);\n  }\n}\nfunction SettingsPage_ion_list_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, SettingsPage_ion_list_13_ion_item_1_Template, 10, 2, \"ion-item\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.parameters);\n  }\n}\nexport let SettingsPage = /*#__PURE__*/(() => {\n  class SettingsPage {\n    constructor(parametersService, toastService, alertCtrl, loadingCtrl) {\n      this.parametersService = parametersService;\n      this.toastService = toastService;\n      this.alertCtrl = alertCtrl;\n      this.loadingCtrl = loadingCtrl;\n      this.parameters = [];\n    }\n    ngOnInit() {\n      this.parametersService.dataChanges.subscribe(message => {\n        this.loadParameters();\n        this.toastService.presentToast({\n          message,\n          duration: 1000\n        });\n      });\n      this.loadParameters();\n    }\n    loadParameters() {\n      this.parametersService.getParameters().subscribe(params => {\n        this.parameters = params;\n      });\n    }\n    insert() {\n      this.presentAlertPrompt();\n    }\n    edit(param) {\n      this.presentAlertPrompt(param);\n    }\n    delete(param) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertCtrl.create({\n          message: `\n        <strong>¿Estás seguro?</strong>\n      `,\n          cssClass: 'alert-buttons',\n          mode: 'ios',\n          buttons: [{\n            text: 'Cancelar',\n            role: 'cancel',\n            cssClass: 'btn-cancel',\n            handler: blah => {\n              console.log('Confirm Cancel: blah');\n            }\n          }, {\n            text: 'Eliminar',\n            cssClass: 'btn-confirm-delete',\n            handler: () => {\n              this.parametersService.deleteParameter(param.id).subscribe(res => {\n                this.parametersService.dataChanges.next('El parámetro ha sido eliminado!');\n              });\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n    presentAlertPrompt(param) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertCtrl.create({\n          cssClass: 'my-custom-class',\n          header: `${param ? 'Editar' : 'Nuevo'} parámetro`,\n          inputs: [{\n            name: 'key',\n            type: 'text',\n            placeholder: 'Key',\n            value: (param === null || param === void 0 ? void 0 : param.key) || ''\n          }, {\n            name: 'value',\n            type: 'text',\n            placeholder: 'Value',\n            value: (param === null || param === void 0 ? void 0 : param.value) || ''\n          }],\n          buttons: [{\n            text: 'Cancelar',\n            role: 'cancel',\n            cssClass: 'btn-cancel',\n            handler: () => {\n              console.log('Confirm Cancel');\n            }\n          }, {\n            text: `${param ? 'Actualizar' : 'Guardar'}`,\n            cssClass: 'btn-save',\n            handler: data => __awaiter(this, void 0, void 0, function* () {\n              const {\n                key,\n                value\n              } = data;\n              if (!key || !value) {\n                this.toastService.presentToast({\n                  message: 'No se ha completado el formulario',\n                  duration: 1000\n                });\n              } else {\n                const loading = yield this.loadingCtrl.create({\n                  message: 'Espere por favor...'\n                });\n                yield loading.present();\n                this.parametersService.findByKey(key, param === null || param === void 0 ? void 0 : param.id).subscribe(exist => {\n                  loading.dismiss();\n                  if (!exist) {\n                    this.createOrUpdateParameter(key, value, param);\n                  } else {\n                    this.toastService.presentToast({\n                      message: 'La llave del parámetro ya existe',\n                      duration: 1000\n                    });\n                  }\n                });\n              }\n            })\n          }]\n        });\n        yield alert.present();\n      });\n    }\n    createOrUpdateParameter(key, value, param) {\n      if (param) {\n        param.key = key;\n        param.value = value;\n        this.parametersService.udpateParameter(param.id, param).subscribe(_ => {\n          this.parametersService.dataChanges.next('El parámetro ha sido editado!');\n        });\n      } else {\n        this.parametersService.insertParamater({\n          key,\n          value\n        }).subscribe(_ => {\n          this.parametersService.dataChanges.next('El parámetro ha sido agregado!');\n        });\n      }\n    }\n  }\n  SettingsPage.ɵfac = function SettingsPage_Factory(t) {\n    return new (t || SettingsPage)(i0.ɵɵdirectiveInject(i1.ParametersService), i0.ɵɵdirectiveInject(i2.ToastService), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i3.LoadingController));\n  };\n  SettingsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsPage,\n    selectors: [[\"app-settings\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[\"title\", \"Ajustes\"], [\"color\", \"light\", 1, \"ion-padding\", 3, \"fullscreen\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [3, \"click\"], [\"name\", \"add\"], [1, \"ion-justify-content-center\"], [\"size-md\", \"4\", \"size-sm\", \"6\", \"size-xs\", \"10\"], [1, \"ion-text-center\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [2, \"font-weight\", \"bold\", \"color\", \"#616161\"], [\"slot\", \"end\", 3, \"click\"], [\"name\", \"create\"], [\"slot\", \"end\", \"color\", \"danger\", 3, \"click\"], [\"name\", \"trash\"]],\n    template: function SettingsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-content\", 1)(2, \"ion-fab\", 2)(3, \"ion-fab-button\", 3);\n        i0.ɵɵlistener(\"click\", function SettingsPage_Template_ion_fab_button_click_3_listener() {\n          return ctx.insert();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-grid\")(6, \"ion-row\", 5)(7, \"ion-col\", 6)(8, \"ion-card\")(9, \"ion-card-header\", 7)(10, \"ion-card-title\");\n        i0.ɵɵtext(11, \"Par\\u00E1metros del sistema\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"ion-card-content\");\n        i0.ɵɵtemplate(13, SettingsPage_ion_list_13_Template, 2, 1, \"ion-list\", 8);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.parameters);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i3.IonButton, i3.IonCard, i3.IonCardContent, i3.IonCardHeader, i3.IonCardTitle, i3.IonCol, i3.IonContent, i3.IonFab, i3.IonFabButton, i3.IonGrid, i3.IonIcon, i3.IonItem, i3.IonLabel, i3.IonList, i3.IonRow, i5.HeaderComponent],\n    styles: [\".ion-card{cursor:pointer!important}.my-custom-class .btn-cancel{background-color:var(--ion-color-light)!important}.my-custom-class .btn-save{color:var(--ion-color-light)!important;background-color:var(--ion-color-tertiary)!important}\\n\"],\n    encapsulation: 2\n  });\n  return SettingsPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}