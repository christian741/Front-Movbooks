{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/movies.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../../../services/toast.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../../shared/header-modal/header-modal.component\";\nfunction CreateMoviePage_small_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \"none\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateMoviePage_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \" El t\\u00EDtulo es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateMoviePage_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \" El t\\u00EDtulo es demasiado corto \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateMoviePage_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \" La pel\\u00EDcula ya se ha registrado \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateMoviePage_small_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \"none\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateMoviePage_small_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \" La descripci\\u00F3n es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerida\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateMoviePage_small_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \" La descripci\\u00F3n es demasiado corta \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let CreateMoviePage = /*#__PURE__*/(() => {\n  class CreateMoviePage {\n    constructor(moviesService, modalCtrl, toastService, fb) {\n      this.moviesService = moviesService;\n      this.modalCtrl = modalCtrl;\n      this.toastService = toastService;\n      this.fb = fb;\n      this.slideOpts = {\n        allowSlideNext: false,\n        allowSlidePrev: false\n      };\n    }\n    ngOnInit() {\n      // init form\n      this.initForm();\n      // patch value\n      if (this.movieId) {\n        this.moviesService.getMovie(this.movieId).subscribe(movie => {\n          this.movieForm.patchValue(movie);\n        });\n      }\n    }\n    initForm() {\n      this.movieForm = this.fb.group({\n        title: ['', [Validators.required, Validators.minLength(2)]],\n        description: ['', Validators.minLength(6)]\n      }, {\n        validators: this.uniqueTitle('title')\n      });\n    }\n    submit() {\n      const {\n        title\n      } = this.movieForm.value;\n      this.moviesService.getMovieDetails(title).subscribe(movieDetails => {\n        if (!movieDetails) {\n          this.toastService.presentToast({\n            message: 'No existe una película con el título ingresado',\n            duration: 2000\n          });\n        } else {\n          // Registrar / Actualizar registro de película\n          if (this.movieId) {\n            this.udpate();\n          } else {\n            this.register();\n          }\n        }\n      });\n    }\n    register() {\n      this.moviesService.insertMovie(this.movieForm.value).subscribe(_ => {\n        this.modalCtrl.dismiss();\n        this.moviesService.dataChanges.next('La película ha sido registrada!');\n      });\n    }\n    udpate() {\n      const movie = Object.assign(Object.assign({}, this.movieForm.value), {\n        id: this.movieId\n      });\n      this.moviesService.updateMovie(this.movieId, movie).subscribe(_ => {\n        this.modalCtrl.dismiss();\n        this.moviesService.dataChanges.next('La película ha sido actualizada!');\n      });\n    }\n    // Validator unique title tanto en insert como en udpate\n    uniqueTitle(title) {\n      return formGroup => {\n        const titleControl = formGroup.get(title);\n        if (titleControl.value && titleControl.dirty && !titleControl.hasError('uniqueTitle')) {\n          this.moviesService.findByTitle(this.movieId, titleControl.value).subscribe(movie => {\n            if (movie) {\n              titleControl.setErrors({\n                uniqueTitle: true\n              });\n            }\n          });\n        }\n      };\n    }\n    get title() {\n      return this.movieForm.get('title');\n    }\n    get description() {\n      return this.movieForm.get('description');\n    }\n  }\n  CreateMoviePage.ɵfac = function CreateMoviePage_Factory(t) {\n    return new (t || CreateMoviePage)(i0.ɵɵdirectiveInject(i1.MoviesService), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  CreateMoviePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateMoviePage,\n    selectors: [[\"app-create-movie\"]],\n    inputs: {\n      movieId: \"movieId\"\n    },\n    decls: 32,\n    vars: 12,\n    consts: [[3, \"title\"], [1, \"ion-padding\", 3, \"fullscreen\"], [3, \"options\"], [1, \"ion-justify-content-center\"], [\"size-md\", \"10\", \"size\", \"12\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"floating\"], [\"name\", \"book\", \"slot\", \"start\", 1, \"ion-align-self-center\"], [\"type\", \"text\", \"formControlName\", \"title\"], [1, \"ion-text-start\"], [\"style\", \"visibility: hidden;\", 4, \"ngIf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"name\", \"document-text\", \"slot\", \"start\", 1, \"ion-align-self-center\"], [\"autoGrow\", \"true\", \"formControlName\", \"description\"], [\"size-md\", \"6\", \"size-sm\", \"8\", \"size-xs\", \"12\"], [\"type\", \"submit\", \"color\", \"tertiary\", \"expand\", \"full\", \"shape\", \"round\", 3, \"disabled\"], [2, \"visibility\", \"hidden\"], [1, \"text-danger\"]],\n    template: function CreateMoviePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header-modal\", 0);\n        i0.ɵɵelementStart(1, \"ion-content\", 1)(2, \"ion-slides\", 2)(3, \"ion-slide\")(4, \"ion-grid\")(5, \"ion-row\", 3)(6, \"ion-col\", 4)(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateMoviePage_Template_form_ngSubmit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(8, \"ion-list\")(9, \"ion-item\")(10, \"ion-label\", 6);\n        i0.ɵɵtext(11, \"T\\u00EDtulo *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"ion-icon\", 7)(13, \"ion-input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵtemplate(15, CreateMoviePage_small_15_Template, 2, 0, \"small\", 10);\n        i0.ɵɵtemplate(16, CreateMoviePage_small_16_Template, 4, 0, \"small\", 11);\n        i0.ɵɵtemplate(17, CreateMoviePage_small_17_Template, 2, 0, \"small\", 11);\n        i0.ɵɵtemplate(18, CreateMoviePage_small_18_Template, 2, 0, \"small\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-item\")(20, \"ion-label\", 6);\n        i0.ɵɵtext(21, \"Descripci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"ion-icon\", 12)(23, \"ion-textarea\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵtemplate(25, CreateMoviePage_small_25_Template, 2, 0, \"small\", 10);\n        i0.ɵɵtemplate(26, CreateMoviePage_small_26_Template, 4, 0, \"small\", 11);\n        i0.ɵɵtemplate(27, CreateMoviePage_small_27_Template, 2, 0, \"small\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"ion-row\", 3)(29, \"ion-col\", 14)(30, \"ion-button\", 15);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"title\", (ctx.movieId ? \"Actualizar\" : \"Nueva\") + \" pel\\u00EDcula\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"options\", ctx.slideOpts);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.movieForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.title.pristine || ctx.title.valid || ctx.title.pending);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.title.dirty && ctx.title.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.title.dirty && ctx.title.hasError(\"minlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.title.dirty && ctx.title.hasError(\"uniqueTitle\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.description.pristine || ctx.description.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.description.dirty && ctx.description.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.description.dirty && ctx.description.hasError(\"minlength\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.movieForm.invalid || ctx.movieForm.pending);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.movieId ? \"Actualizar\" : \"Registrar\", \" \");\n      }\n    },\n    dependencies: [i5.NgIf, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonIcon, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonRow, i2.IonSlide, i2.IonSlides, i2.IonTextarea, i2.TextValueAccessor, i6.HeaderModalComponent],\n    styles: [\"ion-slides[_ngcontent-%COMP%], ion-slide[_ngcontent-%COMP%]{height:100%;width:100%}\"]\n  });\n  return CreateMoviePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}